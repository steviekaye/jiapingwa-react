{"version":3,"sources":["bookData.js","Book.js","App.js","serviceWorker.js","index.js"],"names":["bookData","id","title","year","cover","titleCN","titlePinyin","synopsis","price","Book","data","this","props","react_default","a","createElement","className","src","process","Component","App","books","sort","b","map","book","i","src_Book","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAAaA,SAAW,CAGlB,CACAC,GAAI,EACJC,MAAO,eACPC,KAAM,KACNC,MAAO,2BACPC,QAAS,eACTC,YAAa,UACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,cACPC,KAAM,KACNC,MAAO,0BACPC,QAAS,eACTC,YAAa,SACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,mBACPC,KAAM,KACNC,MAAO,+BACPC,QAAS,eACTC,YAAa,SACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,qBACPC,KAAM,KACNC,MAAO,iCACPC,QAAS,eACTC,YAAa,WACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,gBACPC,KAAM,KACNC,MAAO,4BACPC,QAAS,eACTC,YAAa,YACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,aACPC,KAAM,KACNC,MAAO,yBACPC,QAAS,eACTC,YAAa,QACbC,SAAU,OACVC,MAAO,IAET,CACEP,GAAI,EACJC,MAAO,mBACPC,KAAM,KACNC,MAAO,+BACPC,QAAS,eACTC,YAAa,QACbC,SAAU,OACVC,MAAO,MC9CEC,mLArBX,IAAMC,EAAOC,KAAKC,MAAMZ,SAExB,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,mBAAyBR,EAAKN,SAE1CS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcN,EAAKR,MAAlC,KACAW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaN,EAAKP,KAAjC,KACAU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBN,EAAKL,QAAtC,KACAQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,IAAsCN,EAAKJ,YAA3C,OAEFO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,WAAqCN,EAAKF,gBAhBjCW,aCoBJC,mLAdX,IAAMC,EAAQrB,EAASsB,KAAK,SAACR,EAAES,GAAH,OAASA,EAAEpB,KAAOW,EAAEX,OAEhD,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZK,EAAMG,IAAI,SAACC,EAAMC,GAChB,OAAOb,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKF,EAAG1B,SAAUyB,eARzBN,aCMEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dc7c5249.chunk.js","sourcesContent":["export const bookData = [\n\n\n      {\n      id: 1,\n      title: 'Happy Dreams',\n      year: 2007,\n      cover: '/images/happy_dreams.jpg',\n      titleCN: '高兴',\n      titlePinyin: 'Gaoxing',\n      synopsis: \"todo\",\n      price: 35\n    },\n    {\n      id: 2,\n      title: 'Ruined City',\n      year: 1993,\n      cover: '/images/ruined_city.jpg',\n      titleCN: '废都',\n      titlePinyin: 'Fei Du',\n      synopsis: \"todo\",\n      price: 35\n    },\n    {\n      id: 3,\n      title: 'The Earthen Gate',\n      year: 1996,\n      cover: '/images/the_earthen_gate.jpg',\n      titleCN: '土门',\n      titlePinyin: 'Tu Men',\n      synopsis: \"todo\",\n      price: 40\n    },\n    {\n      id: 4,\n      title: 'The Lantern Bearer',\n      year: 2013,\n      cover: '/images/the_lantern_bearer.jpg',\n      titleCN: '带灯',\n      titlePinyin: 'Dai Deng',\n      synopsis: \"todo\",\n      price: 30\n    },\n    {\n      id: 5,\n      title: 'Shaanxi Opera',\n      year: 2005,\n      cover: '/images/shaanxi_opera.jpg',\n      titleCN: '秦腔',\n      titlePinyin: 'Qin Qiang',\n      synopsis: \"todo\",\n      price: 50\n    },\n    {\n      id: 6,\n      title: 'Turbulence',\n      year: 1987,\n      cover: '/images/turbulence.jpg',\n      titleCN: '浮躁',\n      titlePinyin: 'Fuzao',\n      synopsis: \"todo\",\n      price: 25\n    },\n    {\n      id: 7,\n      title: 'Old Kiln Village',\n      year: 2011,\n      cover: '/images/old_kiln_village.jpg',\n      titleCN: '古炉',\n      titlePinyin: 'Gu Lu',\n      synopsis: \"todo\",\n      price: 45\n    }\n  ]\nexport default bookData;\n","import React, { Component } from 'react';\n\nclass Book extends Component {\n  render() {\n    const data = this.props.bookData;\n\n    return (\n      <div className=\"book\">\n        <div>\n          <img src={process.env.PUBLIC_URL + data.cover}></img>\n        </div>\n        <div className=\"book-info\">\n          <div className=\"book-title\">{data.title} </div>\n          <div className=\"book-year\">{data.year} </div>\n          <div>\n            <span className=\"book-title-CN\">{data.titleCN} </span>\n            <span className=\"book-title-pinyin\">({data.titlePinyin}) </span>\n          </div>\n          <div className=\"book-price\">Price: ${data.price}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Book;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {bookData} from './bookData.js'\nimport Book from './Book.js'\n\n\nclass App extends Component {\n  render() {\n    const books = bookData.sort((a,b) => b.year - a.year);\n\n    return (\n      <div className=\"App\">\n        <div className=\"book-list\">\n          {books.map((book, i) => {\n            return(<Book key={i} bookData={book}/>)\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(<Book />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}